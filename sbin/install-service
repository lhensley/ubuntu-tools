#!/bin/bash

# Include script setup file
	source script-setup
	if [ ! $FUNCTIONS_ARE_DEFINED ]; then echo $0: Functions not defined. Aborting; logger $0: Functions not defined. Aborting; exit 1; fi
	if [ ! $VARIABLES_ARE_DEFINED ]; then echo $0: Variables not defined. Aborting; logger $0: Variables not defined. Aborting; exit 1; fi

# Require root
	f_require_root

# Set Variables
	EXEC_TARGET_DIR="$SBIN_DIR"
	EXEC_TARGET_FILE="$EXEC_TARGET_DIR/$1"
	EXEC_PERMISSIONS=$SBIN_PERMISSIONS
	SERVICE_SOURCE_DIR="$GIT_UBUNTU_TOOLS_SERVICES"
	SERVICE_SOURCE_FILE="$SERVICE_SOURCE_DIR/$1.service"
	SERVICE_LIB_DIR="/lib/systemd/system"
	SERVICE_LIB_FILE="$SERVICE_LIB_DIR/$1.service"
	SERVICE_ETC_DIR="/etc/systemd/system"
	SERVICE_ETC_FILE="$SERVICE_ETC_DIR/$1.service"
	SERVICE_PERMISSIONS=644

# Ensure that a target service has been specified
	if [ "$1" == "" ]; then
		f_die "No target service specified."
		fi

# Confirm presence and absence of all the right files
#	echo Program instances: $(f_program_instances "$1")
#	if [[ $(f_program_instances "$1") -gt 0 ]]; then f_die "Process already running: $1" false; fi
	f_require_file "$EXEC_TARGET_FILE";
	f_require_file "$SERVICE_SOURCE_FILE";
	if $(f_is_file "$SERVICE_LIB_FILE"); then f_die "File already exists: $SERVICE_LIB_FILE" false; fi
	if $(f_is_file "$SERVICE_ETC_FILE"); then f_die "File already exists: $SERVICE_ETC_FILE" false; fi

# Do the installation, including ownerships, permissions, enable, start
	f_log_and_echo "Setting permissions on service and exec files." false
	chown $USER_ROOT:$USER_ROOT "$EXEC_TARGET_FILE"
	chown $USER_ROOT:$USER_ROOT "$SERVICE_SOURCE_FILE"
	chmod $EXEC_PERMISSIONS "$EXEC_TARGET_FILE"
	chmod $SERVICE_PERMISSIONS "$SERVICE_SOURCE_FILE"
	f_log_and_echo "Installing service and exec files." false
	cp "$SERVICE_SOURCE_FILE" "$SERVICE_LIB_FILE"
	cp "$SERVICE_SOURCE_FILE" "$SERVICE_ETC_FILE"
	echo
	echo "To enable (auto-start) and start the service:  sudo systemctl enable '$1' && sudo systemctl start '$1'"
	echo

# Include script footer file
	f_debug_variable "script_footer" "${PATHNAME[script_footer]}"
	source "${PATHNAME[script_footer]}"

exit 0
