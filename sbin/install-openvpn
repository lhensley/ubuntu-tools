#!/bin/bash

DEBUG_MODE=false; if $DEBUG_MODE ; then echo "DEBUG EXECUTING $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi
# if $DEBUG_MODE ; then echo "DEBUG MARKER $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi

# Include script setup file
	source script-setup
	if [ ! $FUNCTIONS_ARE_DEFINED ]; then echo $0: Functions not defined. Aborting; logger $0: Functions not defined. Aborting; exit 1; fi
	if [ ! $VARIABLES_ARE_DEFINED ]; then echo $0: Variables not defined. Aborting; logger $0: Variables not defined. Aborting; exit 1; fi

# Uncomment requirements for script execution
    # f_require_root
    # f_require_ubuntu
    # f_deprecated
    # f_require_minimum_version_number "version-number"
    # f_require_maximum_version_number "version-number"
    # f_only_on_server "hostname"
    # f_require_confirmation "This text is displayed, requesting confirmation word." "ConfirmationWord"
    # set -x # For debugging

# POSSIBLE OPTION: USE IF YOU WANT
# Require root
	f_require_root

# POSSIBLE OPTION: USE IF YOU WANT
# Require a specific host
	# f_require_host [HOST]

# CHECK FOR ENOUGH ARGUMENTS (change 0 to minimum arguments and flesh out Usage)
if [ $# -lt 0 ]; 
    then echo "$EXIT_CODE_DESC_DIRECTORY_NOT_FOUND"
	echo "Usage: $(basename $0)"
	exit $EXIT_CODE_DIRECTORY_NOT_FOUND
fi

# Do stuff here
if $DEBUG_MODE ; then echo "DEBUG MARKER $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi

# SET VARIABLES
	# Generate Revision Timestamp
	REV="$(date '+%Y%m%d%H%M%S%Z')"
	# RSA variables
	EASYRSA="$ADMIN_HOME_DIR/easy-rsa"
	EASYRSA_OLD="$EASYRSA-$REV"
	EASYRSA_REV_FILE="$EASYRSA/rev"
	EASYRSA_VARS="$EASYRSA/vars"
	EASYRSA_BATCH="yes"
	EASYRSA_REQ_CN="$DOMAIN_NAME"
	EASYRSA_REQ_COUNTRY="US"
	EASYRSA_REQ_PROVINCE="Iowa"
	EASYRSA_REQ_CITY="Des Moines"
	EASYRSA_REQ_ORG="Hog Heaven DSM"
	EASYRSA_REQ_EMAIL="$ADMIN_EMAIL"
	EASYRSA_REQ_OU="Geek Division"
	EASYRSA_ALGO="ec"
	EASYRSA_DIGEST="sha512"
	EASYRSA_PKI="$EASYRSA/pki"

# INSTALLATION
	# Retrieve repository updates
	sudo apt --yes update
	# Install needed software
	sudo apt install --yes openvpn easy-rsa
	# Allow clients to reach our server through the firewall
	sudo ufw allow OpenVPN
	# Archive existing easy-rsa working directory if it exists
	if [ -d "$EASYRSA" ]; then
		"$EASYRSA" "$EASYRSA_REV_FILE"
		fi
	# Create ~/easy-rsa working directory
	mkdir "$EASYRSA"
	# Record Revision Timestamp
	echo $REV > "$EASYRSA_VARS"
	# Create symbolic links to the easy-rsa installation
	ln -s /usr/share/easy-rsa/* "$EASYRSA"
	# Create symbolic links to the easy-rsa installation
	cp ~/easy-rsa/vars.example "$EASYRSA_VARS"
	# Restrict access to me alone
	chmod 700 "$EASYRSA"
	



if $DEBUG_MODE ; then echo "DEBUG ENDING $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi

# Include script footer file
	f_debug_variable "script_footer" "${PATHNAME[script_footer]}"
	source "${PATHNAME[script_footer]}"

exit 0

