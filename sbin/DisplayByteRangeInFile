#!/bin/bash

# Example: DisplayByteRangeInFile filename $(FindTextInFile first-include-text filename) $(($(FindTextInFile first-excluded-text filename)-1))

DEBUG_MODE=false; if $DEBUG_MODE ; then echo "DEBUG EXECUTING $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi

# Do stuff here
if $DEBUG_MODE ; then echo "DEBUG MARKER $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi

file="$1"
start_byte="$2"
end_byte="$3"

# CHECK FOR ENOUGH ARGUMENTS
if [ $# -lt 3 ]; then
    echo "$(basename $0): Not enough arguments" >&2
	echo "Usage: $(basename $0) file-to-search start-byte end-byte" >&2
    echo "Purpose: Displays a range of bytes in a file." >&2
    echo "First byte of the file is 1, not 0." >&2
	exit 1
    fi

if [[ ! "$start_byte" =~ ^-?[0-9]+$ ]] || [ ! $start_byte -gt 0 ]; then
    echo "$(basename $0): The start-byte must be an integer greater than zero." >&2
	echo "Usage: $(basename $0) file-to-search start-byte end-byte" >&2
    echo "Purpose: Displays a range of bytes in a file." >&2
    echo "First byte of the file is 1, not 0." >&2
	exit 22
    fi

if [[ ! "$end_byte" =~ ^-?[0-9]+$ ]] || [ ! $end_byte -gt 0 ]; then
    echo "$(basename $0): The end-byte must be an integer greater than zero." >&2
	echo "Usage: $(basename $0) file-to-search start-byte end-byte" >&2
    echo "Purpose: Displays a range of bytes in a file." >&2
    echo "First byte of the file is 1, not 0." >&2
	exit 22
    fi

if [[ $end_byte -lt $start_byte ]]; then
    echo "$(basename $0): The end-byte cannot be less than the start-byte." >&2
 	echo "Usage: $(basename $0) file-to-search start-byte end-byte" >&2
    echo "Purpose: Displays a range of bytes in a file." >&2
    echo "First byte of the file is 1, not 0." >&2
	exit 22
    fi

if [ ! -f "$file" ]; then  # Check whether $file is not a regular file
    echo "$(basename $0): $file: File not found." >&2
    echo "Purpose: Displays a range of bytes in a file." >&2
	echo "Usage: $(basename $0) file-to-search start-byte end-byte" >&2
    echo "Purpose: Displays a range of bytes in a file." >&2
    echo "First byte of the file is 1, not 0." >&2
    exit 169
    fi

if $DEBUG_MODE ; then echo "DEBUG ENDING $0 line ${LINENO}" $(date +"%F %T.%3N %Z") ; fi

tail -c+"$start_byte" "$file" | head -c+$(($end_byte-$start_byte))
echo ""

exit 0

