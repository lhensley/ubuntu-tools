#!/bin/bash
# transcode

PROGRAM_DIRECTORY=$(dirname $0)
source $PROGRAM_DIRECTORY/script-setup
source $PROGRAM_DIRECTORY/lhlib

HANDBRAKE="HandBrakeCLI"
# MKV_BASE_PATH="/mnt/bertha/mkv"
MKV_BASE_PATH="/home/$ADMIN_USER/Videos/MakeMKV-Completed"
# M4V_PATH="/mnt/cloteal/m4v"
M4V_PATH="/home/$ADMIN_USER/Videos/HandBrake-Completed"
PRESET="/home/$ADMIN_USER/.HandBrake/Lane 1080p (BluRay).json"
MAKEMKV_PROCESS=makemkvcon
RSYNC_TARGET="lhensley@pd1.lanehensley.org:/mnt/cloteal/Plex/uploads"
    
mkdir -p "$M4V_PATH"

# While $MKV_BASE_PATH is not empty
PRODUCTIVE=true
while [ $(lh_has_subdirectories "$MKV_BASE_PATH") == "true" ] \
    && [ $PRODUCTIVE == "true" ] ; do # Subdirs found under base
#  echo "  Found subdirectories under $MKV_BASE_PATH"
  PRODUCTIVE=false
  for j in "$MKV_BASE_PATH/"*; do # For each subdirectory found under $MKV_BASE_PATH ...
    if [ -d "$j" ]; then # If if really is a subdirectory ...
#      echo "  Confirmed that $j is a subdirectory"
      for i in "$j/"*; do # For each file in that subdirectory ...
        if [ -f "$i" ]; then # If it really is a file ...
#          echo "  Recognize valid file: $i"
          if [ -n "$(lsof "$i" 2>/dev/null)" ]; then # If source file IS in use and can't be processed ...
            echo "  Source file \"$i\" is in use."  >> /dev/null 2>&1
          else # Source file is NOT in use, and ready to be processed.
#            echo "  Processing source file \"$i\"."
            let "VIDEOSTART = ${#MKV_BASE_PATH} + 2"
            let "VIDEOEND = ${#j}"
            VIDEONAME=$(echo $j | cut -c$VIDEOSTART-$VIDEOEND)
            let "TITLESTART = ${#i} - 5"
            let "TITLEEND = ${#i} - 4"
            n=$(echo $i | cut -c$TITLESTART-$TITLEEND)
            VIDEONAME="$M4V_PATH/$VIDEONAME - $n.m4v"
#            echo "  Target pathname: $VIDEONAME"
            if [ -f "$VIDEONAME" ]; then rm -Rf "$VIDEONAME"; fi
            nice $HANDBRAKE --preset-import-file "$PRESET" \
              -i "$i" -o "$VIDEONAME"  >> /dev/null 2>&1
            exit_status=$?
            if [ $exit_status -ne 0 ]; then # If the transcoding failed ...
#              echo "    Transcoding of \"$i\" failed with error code $exit_status."
              echo "Transcoding to $VIDEONAME FAILED." | mail lanecell
              echo "$HANDBRAKE transcoded title $n returned error number $exit_status." | mail lanecell
            else
              rm "$i" # Delete source file >> /dev/null 2>&1
              PRODUCTIVE=true
              echo "Transcoding to $VIDEONAME successful." | mail lanecell
              fi # End of check for transcoding failure
            fi # End of check for source file in use or not
          fi # End of check that source file really is a file
          if find "$j" -mindepth 1 -print -quit 2>/dev/null | grep -q .; then # If more files in subdirectory ...
            sleep 1 # Do nothing ...
          else
            rm -Rf "$j" >> /dev/null 2>&1 # Delete source subdirectory
            fi # End of check for more files in source subdirectory
        done # Next file in the subdirectory ...
      fi # End of check to confirm that there are any files in the subdirectory
    done # Next subdirectory under $MKV_BASE_PATH (iterating through them)
  done # End of check to confirm that this are any subdirectories under $MKS_BASE_PATH

if $PRODUCTIVE; then
   chown plex:plex $M4V_PATH/*
   echo "$0: Uploading to pd1" | mail lanecell
   sudo -u $ADMIN_USER rsync -rvE $M4V_PATH/ $RSYNC_TARGET
        #   Options:   r=recursive   v=verbose   E=preserve executability
   exit_status=$?
   if [ $exit_status -eq 0 ] ; then
     echo "$0: Upload done." | mail lanecell
     rm $M4V_PATH/* >> /dev/null 2>&1
   else
     echo "$0: Upload FAILED." | mail lanecell
   fi

    # echo "Transcoding is complete." | mail lanecell
    # echo Done.
# fi

exit 0
