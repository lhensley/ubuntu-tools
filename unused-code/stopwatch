#!/bin/bash
# stopwatch
#
SWDIR="/tmp"
SW="$SWDIR/stopwatch"
NOW=$(($(date +%s%N)/1000000))

if [ -z "$1" ]; then
	echo "Usage: "
	echo "stopwatch name start (e.g., stopwatch \"Test Stopwatch\" start):" 
	echo "          Starts the counter from zero."
	echo "stopwatch name lap (e.g., stopwatch \"Test Stopwatch\" lap):"
	echo "          Marks a lap and displays all laps. Can be used multiple times."
	echo "stopwatch name # (e.g., stopwatch \"Test Stopwatch\" 60 ):"
	echo "          Displays \"yes\" and returns 0 if specified number of seconds has elapsed."
	echo "          Displays \"no\" and returns 1 if specified number of seconds has not elapsed."
	exit 2
	fi
if [ "$2" == "start" ]; then
	mkdir -p $SWDIR
	echo $NOW > $SW-$1
	echo "Started."
	exit 0
	fi
if [ "$2" == "lap" ]; then
	mkdir -p $SWDIR
	echo $NOW >> $SW-$1
	LAPNUM=1
	while LAP= read -r line
	do
#		read THEN < $SW-$1
		let ELAPSED=NOW-LAP
		let MILLISECONDS=ELAPSED%1000
		let QUOTIENT=(ELAPSED-MILLISECONDS)/1000
		let SECONDS=QUOTIENT%60
		let QUOTIENT=(QUOTIENT-SECONDS)/60
		let MINUTES=QUOTIENT%60
		let QUOTIENT=(QUOTIENT-MINUTES)/60
		let HOURS=QUOTIENT%24
		let DAYS=(QUOTIENT-HOURS)/24
		printf "Lap %d: %d %02d:%02d:%02d.%03d" $LAPNUM $DAYS $HOURS $MINUTES $SECONDS $MILLISECONDS
		let LAPNUM++
	done < $SW-$1
	exit 0
	fi

if [ -f $SW-$1 ]; then
	read THEN < $SW-$1
	let ELAPSED=NOW-THEN
	let MILLISECONDS=ELAPSED%1000
	let QUOTIENT=(ELAPSED-MILLISECONDS)/1000
	let SECONDS=QUOTIENT%60
	let QUOTIENT=(QUOTIENT-SECONDS)/60
	let MINUTES=QUOTIENT%60
	let QUOTIENT=(QUOTIENT-MINUTES)/60
	let HOURS=QUOTIENT%24
	let DAYS=(QUOTIENT-HOURS)/24
	printf "%d %02d:%02d:%02d.%03d" $DAYS $HOURS $MINUTES $SECONDS $MILLISECONDS
	fi

echo "Stopwatch $1 is not running."
exit 2
